// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package AOCS_RTP;

/************************************************************/
/**
 * Entry point for the OBC750 AOCS Process
 */
public class AOCS_Shell {
	/**
	 * 
	 */
	public enum GDEF_STATUS {
		/**
		 * Failure
		 */
		GDEF_FAILURE,
		/**
		 * Success
		 */
		GDEF_SUCCESS,
		/**
		 * False
		 */
		GDEF_FALSE,
		/**
		 * True
		 */
		GDEF_TRUE;
	};

	/**
	 * 
	 */
	public static AOCS_State_Machine aocs_State_Machine;
	/**
	 * 
	 */
	public static AOCS_TTC aocs_TTC;

	/**
	 * Routine to generate the telemetry information that will be transmitted on the downlink.
	 */
	public void AOCS_downlink_telemetry_handler() {
	}

	/**
	 * Routine to the CAN API Registration Structure
	 */
	public void getCANReg() {
	}

	/**
	 * Routine to handle the PPS Timer Signal
	 */
	public void aocs_pps_timer_signal_handler() {
	}

	/**
	 * Routine to handle the Actuation Timer Signal
	 */
	public void aocs_actuation_timer_signal_handler() {
	}

	/**
	 * Routine to handle the AIM Check Timer Signal
	 */
	public void aocs_aim_check_timer_signal_handler() {
	}

	/**
	 * Routine to handle the Message Interface implemented as a POSIX Thread.
	 */
	public void aocs_message_dispatcher_thread() {
	}

	/**
	 * Entry point for the OBC750 AOCS Process
	 * @param arg 
	 * @param argv 
	 */
	public void main(int arg, String argv) {
	}

	/**
	 * AOCS Task exit function
	 */
	public void TaskExit() {
	}

	/**
	 * AOCS Task initialisation function
	 */
	public void TaskInit() {
	}

	/**
	 * Routine to register the AOCS Process with the CAN Server.
	  * Registers Telecommand and Telemetry service queues and a generic receive message queue.
	  * Block waits for Received CAN messages.
	 */
	public void aocs_can_thread() {
	}

	/**
	 * Initialises a new AOCS cycle
	 */
	public void InitAocs() {
	}
}
